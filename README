 H                                                                                            He
 Li Be              ELEMENTAL FRAMEWORK                                        B  C  N  O  F  Ne
 Na Mg                version H  0004                                          Al Si P  S  Cl Ar
 K  Ca                                           Sc Ti V  Cr Mn Fe Co Ni Cu Zn Ga Ge As Se Br Kr
 Rb Sr                                           Y  Zr Nb Mo Tc Ru Rh Pd Ag Cd In Sn Sb Te I  Xe
 Cs Ba La Ce Pr Nd Pm Sm Eu Gd Tb Dy Ho Er Tm Yb Lu Hf Ta W  Re Os Ir Pt Au Hg Ti Pb Bi Po At Rd
 Fr Ra Ac Th Pa U  Np Pu Am Cm Bk Cf Es Fm Md No Lr Uq Up Uh Us Uo Ue Un Ax Ck Da Du Mr Tt

 Written in PHP, Elemental is a mix between Objects and old school PHP functions. Elemental is
 my take on a web development framework. It provides things that I find to be useful and helpful
 but I really can't tell you if you are going to like it. It started out of my annoyance with
 recreating bits of code for each project, so I decided to try to create a framework that would
 allow me to forget about certain aspects and focus on my goals in a project.

 Elemental is that, it offers a fully managed UI and Application bundle management system,
 super simple configuration and cache implementations and full UI template support. It relies 
 heavily on dynamic scanning of files and arrays and somewhat on a strict naming convention,
 but nearly everything can be tweaked to fit better with your style of code. A lot of work went
 into the UI Bundle specs, which I am particularly proud of yet no where near done. I really see
 the UI Management as one of the best features of Elemental, allowing you to do all your data
 generation and pass it to a function, knowing that it will display correctly in any UI bundle.

 As a side note: I've taken to calling the UI Bundles instead of Themes or Skins because they
 are much more than either of those two things. They contain multiple interfaces, stylesheets,
 images and template files (.t).

 Application bundles also feature a set structure of Initialize.php which is loaded before any
 execution code and can be used to preload resources or run user rights checking, display error
 messages and halt further loading before any Application code is run. Resources.php should
 contain a class named the same as your Application's folder, and is the quickest way for other
 bundles or applications to access an App's data. Finally Application.php contains any execution
 code. It is good to note if you have a Resources.php, it has already been included above your
 Application.php. However any bundle containing at least Application.php will run fine. Info.php
 is just a series of arrays read to generate extra display information in the back-end
 management applications.

 Basically all code is subject to change. I'm still working out the best way to do stuff. I
 wanted to try to make it innovative, yet not a pain or overly complex. As such, I may pull a
 Google and leave the BETA sticker on for an long period of time. Full documentation will be
 released before the final release, feel free to contact me early if you're interested.

 Put simply EVERYTHING HERE IS SUBJECT TO CHANGE!! Enjoy your stay.

 ==== Changelog ================================================================================

 H  0000 - Initial version

 H  0001 - Working version

 H  0002 - Changed file structure
         - Added User Authentication

 H  0003 - Moved to OOP
         - Cleaned up libraries and system loader

 H  0004 - Functional build
         - All major functionality is working and tested
         - Templating and UI Management is done
         - Code is cleaned up and better documented

 ==== Roadmap ============== [-] Assured Change ===== [+] Proposed Change ======================

 H  0005 - Fully document code
    4/12 - Fully test all functions
         - Fix .htaccess to not require folder to be called Elemental

 H  0006 - Base Application Bundles finished and tested
    4/20 + Write sample Application Bundles

 H  0007 + Add extra UI bundles
    5/01 - Reduce Reduce Reduce memory usage
         - Reduce code size if possilbe

 H  0008 + Look into including JavaScript stuffs by default [mootools]
    5/** - Start work on 'Direct Query' mode
         + Add RSS and Search

 H  0009 + Add API using (json or the likes)
    5/** - Write documentation
 
 He 0010 - Public Release [date unknown]

 ==== Bugs and Patches =========================================================================

 Submit any bugs or patches you create to GitHub if possible for the project Elemental
 [http://github.com/axiixc/elemental/tree/master] or to axiixc[gmail]com

 ==== License ============== Subject to Change =================================================

 PHP web application development framework
 Copyright (C) 2009 James Savage axiixc[gmail]com
                    Anyone Else Who wants[to]help

 This program is free software: you can redistribute it and/or modify it under the terms of the 
 GNU General Public License as published by the Free Software Foundation, either version 3 of 
 the License, or (at your option) any later version.

 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
 See the GNU General Public License for more details.

 You should have received a copy of the GNU General Public License along with this program.
 If not, see <http://www.gnu.org/licenses/>.

 This license applies to all files that came with this program. Names of specific authors of 
 individual scripts can be found at the top of each scrip next to the script's name in square 
 brackets ( ex [axiixc:mrmonday:danopia] )

 ==== Contributors =============================================================================

 axiixc [ James Savage : axiixc[gmail]com ] <axiixc.com>
 chuck
 danopia [ Daniel Danopia : email[site]com ] <danopia.com>
 duck 
 mrmonday <octarineparrot.com>
 ttech
